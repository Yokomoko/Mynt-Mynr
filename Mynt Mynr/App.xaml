<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Mynt_Mynr" xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf" x:Class="Mynt_Mynr.App" StartupUri="Starting Guide.xaml">
    <Application.Resources>
        <FontFamily x:Key="Comfortaa">pack://application:,,,/Resources/#Comfortaa-Regular</FontFamily>
        <ResourceDictionary x:Key="MaterialTheme">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="Resources/Style.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

        <Color x:Key="Primary50">#ede7f6</Color>
        <Color x:Key="Primary50Foreground">#DD000000</Color>
        <Color x:Key="Primary100">#d1c4e9</Color>
        <Color x:Key="Primary100Foreground">#DD000000</Color>
        <Color x:Key="Primary200">#b39ddb</Color>
        <Color x:Key="Primary200Foreground">#DD000000</Color>
        <Color x:Key="Primary300">#9575cd</Color>
        <Color x:Key="Primary300Foreground">#DDFFFFFF</Color>
        <Color x:Key="Primary400">#65f0e7</Color>
        <Color x:Key="Primary400Foreground">#DDFFFFFF</Color>
        <Color x:Key="Primary500">#9c3f9a</Color>
        <Color x:Key="Primary500Foreground">#DDFFFFFF</Color>
        <Color x:Key="Primary600">#bf71ff</Color>
        <Color x:Key="Primary600Foreground">#DDFFFFFF</Color>
        <Color x:Key="Primary700">#46489d</Color>
        <Color x:Key="Primary700Foreground">#DDFFFFFF</Color>
        <Color x:Key="Primary800">#535467</Color>
        <Color x:Key="Primary800Foreground">#DDFFFFFF</Color>
        <Color x:Key="Primary900">#141526</Color>
        <Color x:Key="Primary900Foreground">#DDFFFFFF</Color>
        <Color x:Key="Accent100">#9c3f9a</Color>
        <Color x:Key="Accent100Foreground">#DD000000</Color>
        <Color x:Key="Accent200">#9c3f9a</Color>
        <Color x:Key="Accent200Foreground">#FFFFFFFF</Color>
        <Color x:Key="Accent400">#9c3f9a</Color>
        <Color x:Key="Accent400Foreground">#DDFFFFFF</Color>
        <Color x:Key="Accent700">#9c3f9a</Color>
        <Color x:Key="Accent700Foreground">#DDFFFFFF</Color>

        <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{DynamicResource Accent700}" po:Freeze="True" />
        <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent700Foreground}" po:Freeze="True" />

        <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary200}" po:Freeze="True" />
        <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary200Foreground}" po:Freeze="True" />
        <!--<SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}" po:Freeze="True" />-->

        <LinearGradientBrush x:Key="PrimaryHueMidBrush">
            <GradientStop Color="#383790" Offset="0" />
            <GradientStop Color="#95288c" Offset="1" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}" po:Freeze="True" />
        <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}" po:Freeze="True" />
        <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}" po:Freeze="True" />

        <SolidColorBrush x:Key="MedColour" Color="#2A4A5A"/>
        <SolidColorBrush x:Key="DarkColor" Color="White"/>

        <DrawingImage x:Key="InformationIcon">
            <DrawingImage.Drawing>
                <GeometryDrawing Brush="{DynamicResource PrimaryHueMidBrush}" Geometry="M16.800049,11.699997C16.100037,11.699997 15.300049,12 14.300049,12.5 13.400024,13 12.400024,13.900002 11.300049,15.099998L10.900024,15.5 12.400024,16.699997 12.700012,16.400002C13.900024,15.300003 14.300049,15 14.400024,14.900002 12.900024,20.199997 12.100037,23.400002 12.100037,24.800003 12.100037,25.300003 12.300049,25.800003 12.600037,26.099998 12.900024,26.400002 13.400024,26.599998 13.900024,26.599998 14.400024,26.599998 15,26.400002 15.800049,26 16.5,25.599998 17.600037,24.699997 19,23.300003L19.400024,22.900002 18,21.5 17.600037,21.800003C16.300049,23 15.700012,23.400002 15.600037,23.599998 15.600037,23 15.900024,21.5 17.200012,17.099998 18.200012,13.599998 18.200012,13.300003 18.200012,13.099998 18.200012,12.699997 18,12.300003 17.700012,12.099998 17.600037,11.800003 17.200012,11.699997 16.800049,11.699997z M16.700012,5.5999985C15.5,5.5999985 14.5,6.5999985 14.5,7.8000031 14.5,9 15.5,10 16.700012,10 17.900024,10 18.900024,9 18.900024,7.8000031 18.900024,6.5 17.900024,5.5999985 16.700012,5.5999985z M16,0C24.800049,0 32,7.1999969 32,16 32,24.800003 24.800049,32 16,32 7.2000122,32 0,24.800003 0,16 0,7.1999969 7.2000122,0 16,0z">

                </GeometryDrawing>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="HelpIcon">
            <DrawingImage.Drawing>
                <GeometryDrawing Brush="{DynamicResource PrimaryHueMidBrush}"  Geometry="M14.580002,23.394012L14.580002,26.235001 17.18399,26.235001 17.18399,23.394012z M16.117996,5.7660065C14.539993,5.7660065 13.278992,6.2390137 12.332993,7.1880035 10.991989,8.5250092 10.320999,10.223007 10.320999,12.27301L13.043991,12.27301C13.043991,10.695007 13.437988,9.5130005 14.22699,8.7230072 14.697998,8.25 15.289001,8.0130005 16,8.0130005 16.867996,8.0130005 17.537003,8.25 18.009995,8.7230072 18.561996,9.2750092 18.838989,10.106003 18.838989,11.207001 18.838989,12.077011 18.522995,12.827011 17.89299,13.455002 16.789001,14.561005 16.039001,15.429001 15.644989,16.061005 15.090988,16.92601 14.817001,18.228012 14.817001,19.964005L16.947998,19.964005C16.947998,18.545013 17.302002,17.478012 18.009995,16.767014 18.955994,15.824005 19.705994,15.074005 20.259995,14.522003 21.205002,13.574005 21.679001,12.432007 21.679001,11.090012 21.679001,9.5130005 21.166,8.2109985 20.14299,7.1880035 19.194992,6.2390137 17.853989,5.7660065 16.117996,5.7660065z M16,0C24.819992,0 32,7.178009 32,16.001007 32,24.822006 24.819992,32 16,32 7.1759949,32 0,24.822006 0,16.001007 0,7.178009 7.1759949,0 16,0z">
                </GeometryDrawing>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingBrush x:Key="NVidiaLogo" Viewbox="0,0,48,48" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="0.96,0,0,0.96,0,0"/>
                    </DrawingGroup.Transform>
                    <DrawingGroup>
                        <DrawingGroup.Transform>
                            <MatrixTransform Matrix="0.0771765,0,0,0.09968702,0,1.28937"/>
                        </DrawingGroup.Transform>
                        <GeometryDrawing Brush="{DynamicResource PrimaryHueMidBrush}" Geometry="M258.646,365.957 L258.658,482.376 291.536,482.376 291.536,365.959 258.646,365.957 z M0,365.799 L0,482.376 33.171,482.376 33.171,393.857 58.869,393.866 C67.381,393.866 73.444,395.984 77.546,400.361 82.747,405.903 84.869,414.837 84.869,431.186 L84.869,482.376 117.009,482.376 117.009,417.968 C117.009,371.998 87.706,365.799 59.04,365.799 L0,365.799 z M311.585,365.961 L311.585,482.376 364.914,482.376 C393.327,482.376 402.6,477.65 412.629,467.056 419.719,459.618 424.299,443.291 424.299,425.448 424.299,409.085 420.422,394.486 413.658,385.395 401.477,369.139 383.928,365.961 357.73,365.961 L311.585,365.961 z M344.2,391.309 L358.336,391.309 C378.845,391.309 392.109,400.519 392.109,424.416 392.109,448.318 378.845,457.528 358.336,457.528 L344.2,457.528 344.2,391.309 z M211.241,365.961 L183.801,458.226 157.507,365.967 122.015,365.961 159.566,482.376 206.954,482.376 244.799,365.961 211.241,365.961 z M439.599,482.376 L472.483,482.376 472.483,365.967 439.591,365.961 439.599,482.376 z M531.769,366.003 L485.858,482.336 518.278,482.336 525.542,461.774 579.875,461.774 586.751,482.336 621.951,482.336 575.689,365.993 531.769,366.003 z M553.112,387.226 L573.029,441.726 532.566,441.726 553.112,387.226 553.112,387.226 z">

                        </GeometryDrawing>
                        <GeometryDrawing Brush="{DynamicResource PrimaryHueMidBrush}" Geometry="M215.177,93.258 L215.177,65.289 C217.891,65.097 220.634,64.952 223.43,64.864 299.923,62.46 350.108,130.591 350.108,130.591 350.108,130.591 295.906,205.874 237.791,205.874 229.42,205.874 221.93,204.525 215.177,202.258 L215.177,117.448 C244.956,121.045 250.943,134.2 268.851,164.042 L308.669,130.47 C308.669,130.47 279.604,92.348 230.606,92.348 225.274,92.348 220.179,92.724 215.177,93.258 L215.177,93.258 z M215.177,0.869 L215.177,42.645 C217.922,42.428 220.671,42.254 223.43,42.154 329.805,38.57 399.108,129.394 399.108,129.394 399.108,129.394 319.504,226.191 236.576,226.191 228.977,226.191 221.862,225.49 215.177,224.306 L215.177,250.129 C220.895,250.856 226.816,251.284 232.997,251.284 310.172,251.284 365.983,211.875 420.027,165.227 428.98,172.402 465.666,189.855 473.209,197.504 421.821,240.52 302.072,275.19 234.184,275.19 227.642,275.19 221.35,274.796 215.177,274.202 L215.177,310.494 508.501,310.494 508.501,0.869 215.177,0.869 z M215.177,202.258 L215.177,224.306 C143.798,211.58 123.987,137.382 123.987,137.382 123.987,137.382 158.257,99.411 215.177,93.258 L215.177,117.448 C215.133,117.448 215.104,117.437 215.065,117.437 185.198,113.849 161.86,141.758 161.86,141.758 161.86,141.758 174.935,188.737 215.177,202.258 L215.177,202.258 z M88.401,134.167 C88.401,134.167 130.705,71.743 215.177,65.289 L215.177,42.645 C121.616,50.154 40.595,129.394 40.595,129.394 40.595,129.394 86.48,262.057 215.177,274.202 L215.177,250.129 C120.737,238.247 88.401,134.167 88.401,134.167 L88.401,134.167 z">

                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DrawingBrush x:Key="AmdLogo" Viewbox="0,0,42.7380005561114,48" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="{DynamicResource PrimaryHueMidBrush}" Geometry="M6.7079762,38.741986 L4.9229728,43.469998 8.6700431,43.469998 z M33.675014,38.062504 L33.675014,45.769504 35.655026,45.769504 C38.704556,45.769504 39.615047,43.702495 39.615047,41.916004 39.615047,39.831005 38.491513,38.062504 35.619046,38.062504 z M30.640499,35.833495 L36.010525,35.833495 C40.453484,35.833495 42.738001,38.597995 42.738001,41.935505 42.738001,45.431995 40.523981,48.000001 35.672971,48.000001 L30.640499,48.000001 z M15.230986,35.833495 L17.871001,35.833495 21.778561,40.348507 25.684475,35.833495 28.32449,35.833495 28.32449,48.000001 25.29153,48.000001 25.29153,40.399502 22.009549,44.218488 21.546018,44.218488 18.264037,40.399502 18.264037,48.000001 15.230986,48.000001 z M4.9050285,35.833495 L8.4210196,35.833495 13.825559,48.000001 10.561522,48.000001 9.5624992,45.592488 4.1219783,45.592488 3.2100215,48.000001 0,48.000001 z M14.446562,9.5910055 L14.51248,21.516 26.407559,21.516 18.186034,29.735991 6.0765371,29.735991 6.0765371,17.959497 z M35.851498,0 L35.851498,29.513999 27.62997,21.256494 27.62997,8.1105062 14.40756,8.1105062 6.2699879,0.03750229 z">

                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="CpuLogo" Viewbox="0,0,48,47.6999988555908" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="{DynamicResource PrimaryHueMidBrush}" Geometry="M32.400056,40.050011 L32.550018,40.050011 36.600036,40.050011 36.600036,45.600006 C36.600036,46.800011 35.700074,47.7 34.5,47.7 33.300018,47.7 32.400056,46.800011 32.400056,45.600006 z M25.350036,40.050011 L25.5,40.050011 29.550018,40.050011 29.550018,45.600006 C29.550018,46.800011 28.650056,47.7 27.450074,47.7 26.25,47.7 25.350036,46.800011 25.350036,45.600006 z M18,40.050011 L18.150056,40.050011 22.200074,40.050011 22.200074,45.600006 C22.200074,46.800011 21.300018,47.7 20.100036,47.7 18.900056,47.7 18,46.800011 18,45.600006 z M10.800018,40.050011 L10.950073,40.050011 15,40.050011 15,45.600006 C15,46.800011 14.100037,47.7 12.900055,47.7 11.700073,47.7 10.800018,46.800011 10.800018,45.600006 z M40.350036,32.399999 L45.900056,32.399999 C47.100036,32.399999 48,33.300008 48,34.500014 48,35.699994 47.100036,36.600003 45.900056,36.600003 L40.350036,36.600003 z M2.1000366,32.399999 L7.6500549,32.399999 7.6500549,36.449994 2.1000366,36.449994 C0.90005493,36.449994 0,35.550008 0,34.350003 0,33.300008 0.90005493,32.399999 2.1000366,32.399999 z M40.350036,25.199991 L45.900056,25.199991 C47.100036,25.199991 48,26.100002 48,27.300006 48,28.500011 47.100036,29.399996 45.900056,29.399996 L40.350036,29.399996 z M2.1000366,25.199991 L7.6500549,25.199991 7.6500549,29.250011 2.1000366,29.250011 C0.90005493,29.250011 0,28.350002 0,27.149996 0,26.100002 0.90005493,25.199991 2.1000366,25.199991 z M22.650056,22.050005 L23.25,22.050005 C24,22.050005 24.450074,22.35 24.450074,22.94999 24.450074,23.550005 24,24.000011 23.25,24.000011 L22.650056,24.000011 z M21.150056,21.149994 L21.150056,27.300006 22.5,27.300006 22.5,25.199991 23.25,25.199991 C24,25.199991 24.600036,25.050006 25.050018,24.600002 25.5,24.149996 25.800018,23.69999 25.800018,23.1 25.800018,21.750009 25.050018,21.149994 23.400056,21.149994 z M26.700074,21.000008 L26.700074,24.600002 C26.700074,26.399996 27.600036,27.300006 29.25,27.300006 31.050018,27.300006 31.950074,26.399996 31.950074,24.449991 L31.950074,21.000008 30.600036,21.000008 30.600036,24.750011 C30.600036,25.800006 30.150056,26.250011 29.400056,26.250011 28.650056,26.250011 28.200074,25.800006 28.200074,24.750011 L28.200074,21.000008 z M18.600036,20.849999 C17.550018,20.849999 16.800018,21.149994 16.200074,21.750009 15.600036,22.35 15.300018,23.250009 15.300018,24.149996 15.300018,25.050006 15.600036,25.800006 16.200074,26.399996 16.800018,27.000011 17.550018,27.300006 18.450074,27.300006 19.200074,27.300006 19.800018,27.149996 20.25,27.000011 L20.25,25.649996 C19.800018,25.949991 19.350036,26.100002 18.75,26.100002 18.150056,26.100002 17.700074,25.949991 17.400056,25.500011 17.100036,25.199991 16.950074,24.600002 16.950074,24.000011 16.950074,23.399994 17.100036,22.800005 17.550018,22.500009 17.850036,22.19999 18.450074,21.899994 19.050018,21.899994 19.650056,21.899994 20.100036,22.050005 20.550018,22.35 L20.550018,21.000008 C19.650056,21.000008 19.200074,20.849999 18.600036,20.849999 z M40.350036,17.849999 L45.900056,17.849999 C47.100036,17.849999 48,18.750008 48,19.949988 48,21.149994 47.100036,22.050005 45.900056,22.050005 L40.350036,22.050005 z M2.1000366,17.849999 L7.6500549,17.849999 7.6500549,21.899994 2.1000366,21.899994 C0.90005493,21.899994 0,21.000008 0,19.949988 0,18.899994 0.90005493,17.849999 2.1000366,17.849999 z M10.950073,10.8 L36.75,10.8 36.75,36.750014 10.950073,36.750014 z M40.350036,10.64999 L45.900056,10.64999 C47.100036,10.64999 48,11.55 48,12.750004 48,13.949987 47.100036,14.849996 45.900056,14.849996 L40.350036,14.849996 z M2.1000366,10.64999 L7.6500549,10.64999 7.6500549,14.699987 2.1000366,14.699987 C0.90005493,14.849996 0,13.949987 0,12.750004 0,11.699986 0.90005493,10.64999 2.1000366,10.64999 z M34.650056,0 C35.850036,1.0715576E-07 36.75,0.8999867 36.75,2.0999916 L36.75,7.5000027 32.700074,7.5000027 32.700074,2.0999916 C32.550018,0.8999867 33.450074,1.0715576E-07 34.650056,0 z M27.450074,0 C28.650056,1.0715576E-07 29.550018,0.8999867 29.550018,2.0999916 L29.550018,7.5000027 25.5,7.5000027 25.5,2.0999916 C25.5,0.8999867 26.400056,1.0715576E-07 27.450074,0 z M20.100036,0 C21.300018,1.0715576E-07 22.200074,0.8999867 22.200074,2.0999916 L22.200074,7.5000027 18.150056,7.5000027 18.150056,2.0999916 C18.150056,0.8999867 19.050018,1.0715576E-07 20.100036,0 z M12.900055,0 C14.100037,1.0715576E-07 15,0.8999867 15,2.0999916 L15,7.5000027 10.950073,7.5000027 10.950073,2.0999916 C10.950073,0.8999867 11.850037,1.0715576E-07 12.900055,0 z"/>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <Style x:Key="LabelLight" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="LabelDark" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource Primary700Foreground}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Click">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox FlowDirection="LeftToRight" Height="18" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="18">
                                <Canvas Height="24" Width="24">
                                    <Path x:Name="Graphic" Data="M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3 M19,5L19,19 5,19 5,5 19,5z" Fill="{DynamicResource LightColor}"/>
                                    <Ellipse x:Name="InteractionEllipse" Fill="{TemplateBinding Foreground}" Height="0" IsHitTestVisible="False" Canvas.Left="12" Opacity="0" RenderTransformOrigin="0.5,0.5" Canvas.Top="12" Width="0">
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Canvas>
                            </Viewbox>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ButtonBase.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="4,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                <Setter Property="Opacity" Value="0.26"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                                <Setter Property="Fill" TargetName="Graphic" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource ValidationErrorBrush}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ValidationErrorBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        

        <Style x:Key="GroupBoxStyle1" TargetType="{x:Type GroupBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
            <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="PrimaryMid"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid>
                            <Border BorderBrush="{Binding Background, ElementName=PART_ColorZone}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1"/>
                            <DockPanel Background="{TemplateBinding Background}">
                                <materialDesign:ColorZone Height="35" VerticalContentAlignment="Center"  x:Name="PART_ColorZone" DockPanel.Dock="Top" Mode="{Binding (materialDesign:ColorZoneAssist.Mode), RelativeSource={RelativeSource TemplatedParent}}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" materialDesign:ShadowAssist.ShadowEdges="{Binding (materialDesign:ShadowAssist.ShadowEdges), RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="True">
                                    <materialDesign:ColorZone.Effect>
                                        <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <Converters:ShadowConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </materialDesign:ColorZone.Effect>
                                    <ContentPresenter VerticalAlignment="Center" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </materialDesign:ColorZone>
                                <ContentPresenter VerticalAlignment="Center" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </DockPanel>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
        <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Grid.Row="1" Visibility="Hidden"/>
                                <Track x:Name="PART_Track" OpacityMask="{x:Null}" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Name="ColouredBar" Background="{TemplateBinding Foreground}" Command="Slider.DecreaseLarge">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                    <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="2" Canvas.Top="8" Width="{TemplateBinding ActualWidth}"/>
                                                                </Canvas>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="IncreaseRepeatButton" Background="{DynamicResource MaterialDesignCheckBoxOff}" Command="Slider.IncreaseLarge" Content="">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                    <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="2" Canvas.Top="8" Width="{TemplateBinding ActualWidth}"/>
                                                                </Canvas>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" VerticalAlignment="Center" Width="12">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                        <Ellipse x:Name="shadow" Fill="{TemplateBinding Foreground}" Height="24" Margin="-12" Opacity="0" UseLayoutRounding="True" Width="24"/>
                                                        <Ellipse x:Name="grip" Fill="{TemplateBinding Foreground}" Height="12" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" Width="12">
                                                            <Ellipse.RenderTransform>
                                                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                            </Ellipse.RenderTransform>
                                                        </Ellipse>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <Trigger Property="IsDragging" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                                                        <SineEase EasingMode="EaseInOut"/>
                                                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                                                </EasingDoubleKeyFrame>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                            <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                <Setter Property="Opacity" TargetName="ColouredBar" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                                        <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                                        <Rectangle x:Name="PART_SelectionRange" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Visibility="Hidden"/>
                                        <Track x:Name="PART_Track" Grid.Column="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Background="{TemplateBinding Foreground}" Command="Slider.DecreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="{TemplateBinding ActualHeight}" Canvas.Left="8" Width="2"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="IncreaseRepeatButton" Background="{DynamicResource MaterialDesignCheckBoxOff}" Command="Slider.IncreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                            <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Background}" Height="{TemplateBinding ActualHeight}" Canvas.Left="8" Width="2"/>
                                                                        </Canvas>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb" Focusable="False" Height="12" OverridesDefaultStyle="True" VerticalAlignment="Top" Width="18">
                                                    <Thumb.Template>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                                <Ellipse x:Name="shadow" Fill="{TemplateBinding Foreground}" Height="24" Margin="-12" Opacity="0" UseLayoutRounding="True" Width="24"/>
                                                                <Ellipse x:Name="grip" Fill="{TemplateBinding Foreground}" Height="12" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" Width="12">
                                                                    <Ellipse.RenderTransform>
                                                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                                                    </Ellipse.RenderTransform>
                                                                </Ellipse>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0.26" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="shadow"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsDragging" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="grip">
                                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                                                <SineEase EasingMode="EaseInOut"/>
                                                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                                                        </EasingDoubleKeyFrame>
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                    <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Thumb.Template>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="Both">
                                        <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                        <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="10">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="10">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
   



    </Application.Resources>

</Application>
